otk.version: "1"

otk.define:
  architecture: aarch64
  modifications:
    locale: C.UTF-8
    timezone: America/New_York
  filesystem:
    modifications:
    # empty
  packages:
    build:
      otk.external.osbuild-gen-depsolve-dnf4:
        architecture: ${architecture}
        module_platform_id: c9s
        releasever: "9"
        repositories:
          otk.include: "common/repositories/${architecture}.yaml"
        packages:
          otk.include: "common/package-set/${architecture}/build/minimal-raw.yaml"
    os:
      otk.external.osbuild-gen-depsolve-dnf4:
        architecture: ${architecture}
        module_platform_id: c9s
        releasever: "9"
        repositories:
          otk.include: "common/repositories/${architecture}.yaml"
        packages:
          otk.include: "common/package-set/${architecture}/os/minimal-raw.yaml"
  files:
    otk.external.osbuild-gen-inline-files:
      inline:
        kickstart:
          contents: |
            # Run initial-setup on first boot
            # Created by osbuild
            firstboot --reconfig
            lang en_US.UTF-8
  kernel:
    cmdline: ro
    package:
      otk.external.osbuild-get-dnf4-package-info:
        packageset: ${packages.os}
        packagename: "kernel"

otk.include: "common/partition-table/${architecture}/minimal-raw.yaml"

otk.target.osbuild:
  pipelines:
    - otk.include: "pipeline/build/generic.yaml"
    - name: os
      build: name:build
      stages:
        - otk.include: "fragment/kernel-cmdline.yaml"
        - otk.external.osbuild-make-depsolve-dnf4-rpm-stage:
            packageset: ${packages.os}
            gpgkeys:
              otk.include: "common/gpgkeys.yaml"
        - otk.include: "fragment/fix-bls/empty-prefix.yaml"
        - otk.include: "fragment/locale.yaml"
        - otk.include: "fragment/timezone.yaml"
        - type: org.osbuild.sysconfig
          options:
            kernel:
              update_default: true
              default_kernel: kernel
            network:
              networking: true
              no_zero_conf: true
        - type: org.osbuild.systemd.unit
          options:
            unit: grub-boot-success.timer
            dropin: 10-disable-if-greenboot.conf
            config:
              Unit:
                ConditionPathExists: '!/usr/libexec/greenboot/greenboot'
            unit-type: global
        - otk.external.osbuild-make-fstab-stage:
            ${filesystem}
        - otk.include: fragment/grub2/${architecture}.yaml
        - type: org.osbuild.copy
          inputs:
            # XXX note we're only keeping the hash here since it corresponds to the reference
            # XXX manifest and the same in the input
            file-cbe2cb6e47e05af3b653e2567e9ee04ba7d9dcf8fdc2cfd15b232a0844c128f9:
              type: org.osbuild.files
              origin: org.osbuild.source
              references:
                - id: ${files.const.files.kickstart.id}
          options:
            paths:
              - from: input://file-cbe2cb6e47e05af3b653e2567e9ee04ba7d9dcf8fdc2cfd15b232a0844c128f9/${files.const.files.kickstart.id}
                to: tree:///root/anaconda-ks.cfg
                remove_destination: true
        - type: org.osbuild.chown
          options:
            items:
              /root/anaconda-ks.cfg:
                user: root
                group: root
        - type: org.osbuild.systemd
          options:
            enabled_services:
              - NetworkManager.service
              - firewalld.service
              - sshd.service
              - initial-setup.service
        - otk.include: "fragment/selinux/targeted.yaml"
    - otk.include: pipeline/image/${architecture}.yaml
    - name: xz
      build: name:build
      stages:
        - type: org.osbuild.xz
          inputs:
            file:
              type: org.osbuild.files
              origin: org.osbuild.pipeline
              references:
                name:image:
                  file: disk.img
          options:
            filename: disk.raw.xz
  sources:
    otk.op.join:
      values:
        - otk.external.osbuild-make-depsolve-dnf4-curl-source:
            packagesets:
              - ${packages.build}
              - ${packages.os}
        - otk.external.osbuild-make-inline-source:
            const:
              files: ${files.const.files}
